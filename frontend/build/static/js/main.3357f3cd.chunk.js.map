{"version":3,"sources":["components/Login.js","components/HealthTracker.js","App.js","reportWebVitals.js","index.js"],"names":["Login","email","setEmail","useState","password","setPassword","error","setError","navigate","useNavigate","React","createElement","onSubmit","async","e","preventDefault","response","axios","post","localStorage","setItem","data","token","err","type","value","onChange","target","placeholder","HealthTracker","totalCalories","setTotalCalories","totalExercise","setTotalExercise","totalSleep","setTotalSleep","caloriesInput","setCaloriesInput","exerciseInput","setExerciseInput","sleepInput","setSleepInput","onClick","handleLogCalories","parseInt","handleLogExercise","handleLogSleep","App","Router","className","Routes","Route","path","element","reportWebVitals","onPerfEntry","Function","__webpack_require__","then","bind","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","document","getElementById","render","StrictMode"],"mappings":"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","file":"static/js/main.3357f3cd.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\nimport axios from 'axios';\r\nimport { useNavigate } from 'react-router-dom'; // Import useNavigate\r\n\r\nconst Login = () => {\r\n    const [email, setEmail] = useState('');\r\n    const [password, setPassword] = useState('');\r\n    const [error, setError] = useState('');\r\n    const navigate = useNavigate(); // Initialize useNavigate for navigation\r\n\r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault();\r\n        try {\r\n            const response = await axios.post('/api/auth/login', { email, password });\r\n            localStorage.setItem('token', response.data.token); // Save token to localStorage\r\n\r\n            // Redirect to the Health Tracker page after successful login\r\n            navigate('/health-tracker');\r\n        } catch (err) {\r\n            setError('Invalid credentials');\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <h2>Login</h2>\r\n            <form onSubmit={handleSubmit}>\r\n                <input\r\n                    type=\"email\"\r\n                    value={email}\r\n                    onChange={(e) => setEmail(e.target.value)}\r\n                    placeholder=\"Email\"\r\n                />\r\n                <input\r\n                    type=\"password\"\r\n                    value={password}\r\n                    onChange={(e) => setPassword(e.target.value)}\r\n                    placeholder=\"Password\"\r\n                />\r\n                <button type=\"submit\">Login</button>\r\n                {error && <p>{error}</p>}\r\n            </form>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Login;\r\n\r\n\r\n","import React, { useState } from 'react';\r\n\r\nconst HealthTracker = () => {\r\n    const [totalCalories, setTotalCalories] = useState(0);\r\n    const [totalExercise, setTotalExercise] = useState(0); // in minutes\r\n    const [totalSleep, setTotalSleep] = useState(0); // in hours\r\n\r\n    const [caloriesInput, setCaloriesInput] = useState('');\r\n    const [exerciseInput, setExerciseInput] = useState('');\r\n    const [sleepInput, setSleepInput] = useState('');\r\n\r\n    const handleLogCalories = () => {\r\n        setTotalCalories(totalCalories + parseInt(caloriesInput));\r\n        setCaloriesInput(''); // Reset input\r\n    };\r\n\r\n    const handleLogExercise = () => {\r\n        setTotalExercise(totalExercise + parseInt(exerciseInput));\r\n        setExerciseInput(''); // Reset input\r\n    };\r\n\r\n    const handleLogSleep = () => {\r\n        setTotalSleep(totalSleep + parseInt(sleepInput));\r\n        setSleepInput(''); // Reset input\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <h2>Total Calories</h2>\r\n            <p>{totalCalories} calories</p>\r\n\r\n            <h2>Total Exercise Duration</h2>\r\n            <p>{totalExercise} minutes</p>\r\n\r\n            <h2>Total Sleep Duration</h2>\r\n            <p>{totalSleep} hours</p>\r\n\r\n            <div>\r\n                <h3>Log Calories</h3>\r\n                <input\r\n                    type=\"number\"\r\n                    value={caloriesInput}\r\n                    onChange={(e) => setCaloriesInput(e.target.value)}\r\n                    placeholder=\"Enter calories\"\r\n                />\r\n                <button onClick={handleLogCalories}>Add Calories</button>\r\n            </div>\r\n\r\n            <div>\r\n                <h3>Log Exercise</h3>\r\n                <input\r\n                    type=\"number\"\r\n                    value={exerciseInput}\r\n                    onChange={(e) => setExerciseInput(e.target.value)}\r\n                    placeholder=\"Enter exercise (minutes)\"\r\n                />\r\n                <button onClick={handleLogExercise}>Add Exercise</button>\r\n            </div>\r\n\r\n            <div>\r\n                <h3>Log Sleep</h3>\r\n                <input\r\n                    type=\"number\"\r\n                    value={sleepInput}\r\n                    onChange={(e) => setSleepInput(e.target.value)}\r\n                    placeholder=\"Enter sleep (hours)\"\r\n                />\r\n                <button onClick={handleLogSleep}>Add Sleep</button>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default HealthTracker;\r\n","import React from 'react';\r\nimport { BrowserRouter as Router, Route, Routes } from 'react-router-dom';  // Use Routes instead of Switch\r\nimport './App.css';\r\nimport Login from './components/Login';  // Login component\r\nimport HealthTracker from './components/HealthTracker';  // HealthTracker component\r\n\r\nfunction App() {\r\n    return (\r\n        <Router>\r\n            <div className=\"App\">\r\n                <Routes>  {/* Replace Switch with Routes */}\r\n                    {/* Define routes */}\r\n                    <Route path=\"/login\" element={<Login />} />  {/* Use element={} in v6 */}\r\n                    <Route path=\"/health-tracker\" element={<HealthTracker />} />\r\n                    <Route path=\"/\" element={<Login />} />  {/* Default route */}\r\n                </Routes>\r\n            </div>\r\n        </Router>\r\n    );\r\n}\r\n\r\nexport default App;\r\n\r\n\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom/client';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nconst root = ReactDOM.createRoot(document.getElementById('root'));\r\nroot.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}